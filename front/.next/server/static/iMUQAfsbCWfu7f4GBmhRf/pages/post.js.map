{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js","webpack:///./pages/post.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///external \"immer\"","webpack:///external \"core-js/library/fn/promise\"","webpack:///external \"react\"","webpack:///external \"regenerator-runtime\"","webpack:///./node_modules/@babel/runtime-corejs2/core-js/promise.js","webpack:///external \"react-redux\"","webpack:///./node_modules/@babel/runtime-corejs2/regenerator/index.js","webpack:///./reducers/post.js","webpack:///external \"core-js/library/fn/parse-int\"","webpack:///external \"react-helmet\""],"names":["Post","id","useSelector","state","post","singlePost","User","nickname","content","name","property","Images","src","getInitialProps","context","store","dispatch","type","LOAD_POST_REQUEST","data","query","initialState","mainPosts","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","action","produce","draft","forEach","p","push","index","findIndex","v","i","splice","addingPostErrorReason","unshift","error","postIndex","postId","Comments","comment","comments","lastId","hasMorePost","d","length","Likers","userId","likeIndex"],"mappings":"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","file":"static/iMUQAfsbCWfu7f4GBmhRf/pages/post.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = require(\"core-js/library/fn/parse-int\");","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nconst Post = ({ id }) => {\n  const { singlePost } = useSelector(state => state.post);\n  return (\n    <>\n      <Helmet\n        title={`${singlePost.User.nickname}님의 글`}\n        description={singlePost.content}\n        meta={[{\n          name: 'description', content: singlePost.content,\n        }, {\n          property: 'og:title', content: `${singlePost.User.nickname}님의 게시글`,\n        }, {\n          property: 'og:description', content: singlePost.content,\n        }, {\n          property: 'og:image', content: singlePost.Images[0] && `http://localhost:3065/${singlePost.Images[0].src}`,\n        }, {\n          property: 'og:url', content: `http://localhost:3060/post/${id}`,\n        }]}\n      />\n      <div itemScope=\"content\">{singlePost.content}</div>\n      <div itemScope=\"author\">{singlePost.User.nickname}</div>\n      <div>\n        {singlePost.Images[0] && <img src={`http://localhost:3065/${singlePost.Images[0].src}`} />}\n      </div>\n    </>\n  );\n};\n\nPost.getInitialProps = async (context) => {\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.query.id,\n  });\n  return { id: parseInt(context.query.id, 10) };\n};\n\nPost.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nexport default Post;\n","import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","module.exports = require(\"immer\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"react\");","module.exports = require(\"regenerator-runtime\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"react-redux\");","module.exports = require(\"regenerator-runtime\");\n","import produce from 'immer';\n\nexport const initialState = {\n  mainPosts: [], // 화면에 보일 포스트들\n  imagePaths: [], // 미리보기 이미지 경로\n  addPostErrorReason: '', // 포스트 업로드 실패 사유\n  isAddingPost: false, // 포스트 업로드 중\n  postAdded: false, // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false,\n  singlePost: null,\n};\n\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\n\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\n\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\n\nexport default (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case UPLOAD_IMAGES_REQUEST: {\n        break;\n      }\n      case UPLOAD_IMAGES_SUCCESS: {\n        action.data.forEach((p) => {\n          draft.imagePaths.push(p);\n        });\n        break;\n      }\n      case UPLOAD_IMAGES_FAILURE: {\n        break;\n      }\n      case REMOVE_IMAGE: {\n        const index = draft.imagePaths.findIndex((v, i) => i === action.index);\n        draft.imagePaths.splice(index, 1);\n        break;\n      }\n      case ADD_POST_REQUEST: {\n        draft.isAddingPost = true;\n        draft.addingPostErrorReason = '';\n        draft.postAdded = false;\n        break;\n      }\n      case ADD_POST_SUCCESS: {\n        draft.isAddingPost = false;\n        draft.mainPosts.unshift(action.data);\n        draft.postAdded = true;\n        draft.imagePaths = [];\n        break;\n      }\n      case ADD_POST_FAILURE: {\n        draft.isAddingPost = false;\n        draft.addPostErrorReason = action.error;\n        break;\n      }\n      case ADD_COMMENT_REQUEST: {\n        draft.isAddingComment = true;\n        draft.addCommentErrorReason = '';\n        draft.commentAdded = false;\n        break;\n      }\n      case ADD_COMMENT_SUCCESS: {\n        const postIndex = draft.mainPosts.findIndex(v => v.id === action.data.postId);\n        draft.mainPosts[postIndex].Comments.push(action.data.comment);\n        draft.isAddingComment = false;\n        draft.commentAdded = true;\n        break;\n      }\n      case ADD_COMMENT_FAILURE: {\n        draft.isAddingComment = false;\n        draft.addingPostErrorReason = action.error;\n        break;\n      }\n      case LOAD_COMMENTS_SUCCESS: {\n        const postIndex = draft.mainPosts.findIndex(v => v.id === action.data.postId);\n        draft.mainPosts[postIndex].Comments = action.data.comments;\n        break;\n      }\n      case LOAD_MAIN_POSTS_REQUEST:\n      case LOAD_HASHTAG_POSTS_REQUEST:\n      case LOAD_USER_POSTS_REQUEST: {\n        draft.mainPosts = !action.lastId ? [] : draft.mainPosts;\n        draft.hasMorePost = action.lastId ? draft.hasMorePost : true;\n        break;\n      }\n      case LOAD_MAIN_POSTS_SUCCESS:\n      case LOAD_HASHTAG_POSTS_SUCCESS:\n      case LOAD_USER_POSTS_SUCCESS: {\n        action.data.forEach((d) => {\n          draft.mainPosts.push(d);\n        });\n        draft.hasMorePost = action.data.length === 10;\n        break;\n      }\n      case LOAD_MAIN_POSTS_FAILURE:\n      case LOAD_HASHTAG_POSTS_FAILURE:\n      case LOAD_USER_POSTS_FAILURE: {\n        break;\n      }\n      case LIKE_POST_REQUEST: {\n        break;\n      }\n      case LIKE_POST_SUCCESS: {\n        const postIndex = draft.mainPosts.findIndex(v => v.id === action.data.postId);\n        draft.mainPosts[postIndex].Likers.unshift({ id: action.data.userId });\n        break;\n      }\n      case LIKE_POST_FAILURE: {\n        break;\n      }\n      case UNLIKE_POST_REQUEST: {\n        break;\n      }\n      case UNLIKE_POST_SUCCESS: {\n        const postIndex = draft.mainPosts.findIndex(v => v.id === action.data.postId);\n        const likeIndex = draft.mainPosts[postIndex].Likers.findIndex(v => v.id === action.data.userId);\n        draft.mainPosts[postIndex].Likers.splice(likeIndex, 1);\n        break;\n      }\n      case UNLIKE_POST_FAILURE: {\n        break;\n      }\n      case RETWEET_REQUEST: {\n        break;\n      }\n      case RETWEET_SUCCESS: {\n        draft.mainPosts.unshift(action.data);\n        break;\n      }\n      case RETWEET_FAILURE: {\n        break;\n      }\n      case REMOVE_POST_REQUEST: {\n        break;\n      }\n      case REMOVE_POST_SUCCESS: {\n        const index = draft.mainPosts.findIndex(v => v.id === action.data);\n        draft.mainPosts.splice(index, 1);\n        break;\n      }\n      case REMOVE_POST_FAILURE: {\n        break;\n      }\n      case LOAD_POST_SUCCESS: {\n        draft.singlePost = action.data;\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  });\n};\n","module.exports = require(\"core-js/library/fn/parse-int\");","module.exports = require(\"react-helmet\");"],"sourceRoot":""}